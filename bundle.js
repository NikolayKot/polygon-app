(()=>{"use strict";var n={56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],r=0;r<n.length;r++){var d=n[r],l=o.base?d[0]+o.base:d[0],h=i[l]||0,c="".concat(l," ").concat(h);i[l]=h+1;var g=e(c),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==g)t[g].references++,t[g].updater(p);else{var u=s(p,o);o.byIndex=r,t.splice(r,0,{identifier:c,updater:u,references:1})}a.push(c)}return a}function s(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,s){var i=o(n=n||[],s=s||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var r=e(i[a]);t[r].references--}for(var d=o(n,s),l=0;l<i.length;l++){var h=e(i[l]);0===t[h].references&&(t[h].updater(),t.splice(h,1))}i=d}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},249:(n,t,e)=>{e.d(t,{A:()=>r});var o=e(601),s=e.n(o),i=e(314),a=e.n(i)()(s());a.push([n.id,'* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n}\n\nhtml,\nbody {\n\theight: 100%;\n\toverflow: hidden;\n}\n\nbody {\n\tfont-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\n\tbackground-color: #f5f5f5;\n\tposition: fixed;\n\twidth: 100%;\n\ttop: 0;\n\tleft: 0;\n}\n\n#app {\n\twidth: 100%;\n\theight: 100vh;\n\tmax-height: 100vh;\n\toverflow: hidden;\n}\n\n.btn {\n\tpadding: 10px 20px;\n\tmargin: 5px;\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground-color: #007bff;\n\tcolor: white;\n\tcursor: pointer;\n\tfont-size: 14px;\n\ttransition: background-color 0.3s;\n}\n\n.btn:hover {\n\tbackground-color: #0056b3;\n}\n\n.btn:active {\n\ttransform: translateY(1px);\n}\n\n.btn.secondary {\n\tbackground-color: #6c757d;\n}\n\n.btn.secondary:hover {\n\tbackground-color: #545b62;\n}\n\n.btn.danger {\n\tbackground-color: #dc3545;\n}\n\n.btn.danger:hover {\n\tbackground-color: #c82333;\n}\n',""]);const r=a},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,s,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var d=this[r][0];null!=d&&(a[d]=!0)}for(var l=0;l<n.length;l++){var h=[].concat(n[l]);o&&a[h[0]]||(void 0!==i&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=i),e&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=e):h[2]=e),s&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=s):h[4]="".concat(s)),t.push(h))}},t}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},601:n=>{n.exports=function(n){return n[1]}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},754:(n,t,e)=>{e.d(t,{A:()=>r});var o=e(601),s=e.n(o),i=e(314),a=e.n(i)()(s());a.push([n.id,"/* App Container */\npolygon-app {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100vh;\n}\n\n/* Buffer Zone */\nbuffer-zone {\n\tdisplay: block;\n\theight: 30%;\n\tbackground-color: #e9ecef;\n\tborder-bottom: 2px solid #dee2e6;\n\tpadding: 10px;\n\toverflow: auto;\n}\n\n/* Work Zone */\nwork-zone {\n\tdisplay: block;\n\theight: 70%;\n\tbackground-color: #ffffff;\n\tposition: relative;\n\toverflow: hidden;\n}\n\n/* Control Panel */\n.control-panel {\n\tposition: absolute;\n\ttop: 10px;\n\tleft: 10px;\n\tz-index: 1000;\n\tbackground: rgba(255, 255, 255, 0.9);\n\tpadding: 10px;\n\tborder-radius: 8px;\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Polygon Styles */\n.polygon {\n\tcursor: grab;\n\ttransition: all 0.2s ease;\n}\n\n.polygon:hover {\n\tfilter: brightness(1.1);\n\ttransform: scale(1.05);\n}\n\n.polygon.dragging {\n\tcursor: grabbing;\n\topacity: 0.7;\n}\n\n/* Drop Zones */\n.drop-zone {\n\tmin-height: 100px;\n\tborder: 2px dashed transparent;\n\ttransition: all 0.3s ease;\n}\n\n.drop-zone.drag-over {\n\tborder-color: #007bff;\n\tbackground-color: rgba(0, 123, 255, 0.1);\n}\n\n/* Scale and Grid */\n.scale-x,\n.scale-y {\n\tposition: absolute;\n\tbackground: rgba(255, 255, 255, 0.9);\n\tfont-size: 10px;\n\tcolor: #666;\n}\n\n.scale-x {\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 20px;\n\tborder-top: 1px solid #ddd;\n}\n\n.scale-y {\n\ttop: 0;\n\tleft: 0;\n\tbottom: 20px;\n\twidth: 40px;\n\tborder-right: 1px solid #ddd;\n}\n\n.grid-line {\n\tstroke: #e0e0e0;\n\tstroke-width: 0.5;\n}\n\n.grid-line.major {\n\tstroke: #ccc;\n\tstroke-width: 1;\n}\n",""]);const r=a},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,s&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}}},t={};function e(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0;var o=e(72),s=e.n(o),i=e(825),a=e.n(i),r=e(659),d=e.n(r),l=e(56),h=e.n(l),c=e(540),g=e.n(c),p=e(113),u=e.n(p),y=e(249),f={};f.styleTagTransform=u(),f.setAttributes=h(),f.insert=d().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=g(),s()(y.A,f),y.A&&y.A.locals&&y.A.locals;var b=e(754),m={};m.styleTagTransform=u(),m.setAttributes=h(),m.insert=d().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=g(),s()(b.A,m),b.A&&b.A.locals&&b.A.locals;class v extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.init()}init(){this.render(),this.attachEventListeners(),this.loadFromStorage()}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    display: flex;\n                    flex-direction: column;\n                    width: 100%;\n                    height: 100vh;\n                    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n                }\n\n                .control-panel {\n                    background: #2a2a2a;\n                    padding: 15px;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .control-left {\n                    display: flex;\n                    gap: 10px;\n                }\n\n                .control-right {\n                    display: flex;\n                    gap: 10px;\n                }\n\n                .separator {\n                    height: 10px;\n                    background: rgba(255, 255, 255, 0.95);\n                    width: 100%;\n                }\n\n                .btn {\n                    padding: 8px 16px;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-size: 14px;\n                    font-weight: 500;\n                    transition: all 0.2s ease;\n                    outline: none;\n                    background-color: #808080;\n                    color: #000000;\n                }\n\n                .btn:hover {\n                    background-color: #696969;\n                    transform: translateY(-1px);\n                }\n\n                .app-content {\n                    flex: 1;\n                    display: flex;\n                    height: 93%;\n                    flex-direction: column;\n                    overflow: hidden;\n                }\n\n                buffer-zone {\n                    height: 35%;\n                    min-height: 200px;\n                }\n\n                work-zone {\n                    flex: 1;\n                    min-height: 300px;\n                }\n            </style>\n\n            <div class="control-panel">\n                <div class="control-left">\n                    <button class="btn" id="createBtn">Создать</button>\n                </div>\n                <div class="control-right">\n                    <button class="btn" id="saveBtn">Сохранить</button>\n                    <button class="btn" id="resetBtn">Сбросить</button>\n                </div>\n            </div>\n\n            <div class="separator"></div>\n\n            <div class="app-content">\n                <buffer-zone id="bufferZone"></buffer-zone>\n                <work-zone id="workZone"></work-zone>\n            </div>\n        '}handlePolygonReturn(n){const t=this.shadowRoot.getElementById("bufferZone");t.showPolygon(n.id)||t.addPolygon(n)}attachEventListeners(){this.shadowRoot.getElementById("createBtn").addEventListener("click",(()=>{this.createPolygons()})),this.shadowRoot.getElementById("saveBtn").addEventListener("click",(()=>{this.saveToStorage()})),this.shadowRoot.getElementById("resetBtn").addEventListener("click",(()=>{this.resetData()})),this.addEventListener("polygon-moved",(n=>{this.handlePolygonMoved(n)}),{capture:!0})}createPolygons(){const n=this.shadowRoot.getElementById("bufferZone"),t=Math.floor(16*Math.random())+5;for(let e=0;e<t;e++){const t=this.generateRandomPolygon();n.addPolygon(t)}this.showNotification(`Создано ${t} полигонов!`)}generateRandomPolygon(){const n=Math.floor(6*Math.random())+3,t=[],e=30*Math.random()+15;for(let o=0;o<n;o++){const s=o/n*2*Math.PI,i=e+20*(Math.random()-.5),a=50+Math.cos(s)*i,r=50+Math.sin(s)*i;t.push({x:Math.max(5,Math.min(95,a)),y:Math.max(5,Math.min(95,r))})}return{id:`polygon_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,vertices:t,fill:"#8B0000",stroke:"none",strokeWidth:0}}handlePolygonMoved(n){const{polygon:t,from:e,to:o}=n.detail,s=this.shadowRoot.getElementById("bufferZone"),i=this.shadowRoot.getElementById("workZone");"work"===o&&"buffer"===e?i.addPolygon(t):"buffer"===o&&"work"===e&&(s.showPolygon(t.id)||s.addPolygon(t))}saveToStorage(){try{const n=this.shadowRoot.getElementById("bufferZone"),t=this.shadowRoot.getElementById("workZone"),e={bufferPolygons:n.getPolygons(),workPolygons:t.getPolygons(),timestamp:(new Date).toISOString()};localStorage.setItem("polygon-app-data",JSON.stringify(e)),this.showNotification("Данные сохранены!","success")}catch(n){this.showNotification("Ошибка сохранения!","error")}}loadFromStorage(){try{const n=localStorage.getItem("polygon-app-data");if(n){const t=JSON.parse(n);setTimeout((()=>{const n=this.shadowRoot.getElementById("bufferZone"),e=this.shadowRoot.getElementById("workZone");t.bufferPolygons&&n&&t.bufferPolygons.forEach((t=>n.addPolygon(t))),t.workPolygons&&e&&t.workPolygons.forEach((n=>e.addPolygon(n)))}),500)}}catch(n){console.error("Ошибка загрузки:",n)}}resetData(){if(confirm("Вы уверены, что хотите удалить все данные?")){localStorage.removeItem("polygon-app-data");const n=this.shadowRoot.getElementById("bufferZone"),t=this.shadowRoot.getElementById("workZone");n.clearPolygons(),t.clearPolygons(),this.showNotification("Данные сброшены!","info")}}showNotification(n,t="info"){const e=document.createElement("div");e.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 12px 20px;\n            border-radius: 6px;\n            color: white;\n            font-weight: 500;\n            z-index: 10000;\n            animation: slideIn 0.3s ease;\n            background-color: ${"success"===t?"#28a745":"error"===t?"#dc3545":"#17a2b8"};\n        `,e.textContent=n,document.body.appendChild(e),setTimeout((()=>{e.style.animation="slideOut 0.3s ease",setTimeout((()=>e.remove()),300)}),2e3)}connectedCallback(){if(!document.getElementById("notification-styles")){const n=document.createElement("style");n.id="notification-styles",n.textContent="\n                @keyframes slideIn {\n                    from { transform: translateX(100%); opacity: 0; }\n                    to { transform: translateX(0); opacity: 1; }\n                }\n                @keyframes slideOut {\n                    from { transform: translateX(0); opacity: 1; }\n                    to { transform: translateX(100%); opacity: 0; }\n                }\n            ",document.head.appendChild(n)}}}customElements.define("polygon-app",v);class x extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.polygons=new Map,this.init()}init(){this.render(),this.attachEventListeners()}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    display: block;\n                    background-color: rgb(51, 51, 51);\n                    position: relative;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    width: 100%;\n                    height: 100%;\n                    box-sizing: border-box;\n                }\n\n                .buffer-content {\n                    padding: 20px;\n                    width: 100%;\n                    height: 100%;\n                    box-sizing: border-box;\n                }\n\n                .polygons-grid {\n                    display: grid;\n                    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n                    gap: 15px;\n                    width: 100%;\n                }\n\n                .polygon-card {\n                    width: 120px;\n                    height: 120px;\n                    background-color: transparent;\n                    border-radius: 8px;\n                    cursor: grab;\n                    transition: all 0.2s ease;\n                    position: relative;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    box-sizing: border-box;\n                }\n\n                .polygon-card:hover {\n                    border-color: white;\n                    transform: scale(1.05);\n                }\n\n                .polygon-card.dragging {\n                    opacity: 0.5;\n                    cursor: grabbing;\n                }\n\n                .polygon-svg {\n                    width: 100px;\n                    height: 100px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    background: transparent;\n                    border: none;\n                    overflow: visible;\n                }\n\n                .polygon-svg svg {\n                    width: 80px;\n                    height: 80px;\n                    display: block;\n                }\n\n                .polygon-svg polygon {\n                    filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));\n                }\n\n                .empty-state {\n                    text-align: center;\n                    padding: 60px 20px;\n                    color: rgb(204, 204, 204);\n                    font-size: 16px;\n                }\n\n                .drop-zone {\n                    border: 3px dashed rgb(204, 204, 204);\n                    border-radius: 12px;\n                    padding: 30px 20px;\n                    text-align: center;\n                    background: rgba(204, 204, 204, 0.1);\n                    color: rgb(204, 204, 204);\n                    font-weight: 600;\n                    margin-bottom: 20px;\n                    display: none;\n                    font-size: 14px;\n                }\n\n                .drop-zone.active {\n                    display: block;\n                    border-color: white;\n                    color: white;\n                    background: rgba(255, 255, 255, 0.1);\n                }\n\n                :host::-webkit-scrollbar {\n                    width: 8px;\n                }\n\n                :host::-webkit-scrollbar-track {\n                    background: rgb(51, 51, 51);\n                }\n\n                :host::-webkit-scrollbar-thumb {\n                    background: rgb(204, 204, 204);\n                    border-radius: 4px;\n                }\n\n                :host::-webkit-scrollbar-thumb:hover {\n                    background: white;\n                }\n            </style>\n\n            <div class="buffer-content">\n                <div class="drop-zone" id="dropZone">\n                    ↩️ Отпустите, чтобы вернуть полигон в буферную зону\n                </div>\n\n                <div class="polygons-grid" id="polygonsGrid">\n                </div>\n\n                <div class="empty-state" id="emptyState">\n                    Буферная зона пуста<br>\n                    Нажмите "Создать" чтобы сгенерировать полигоны\n                </div>\n            </div>\n        '}attachEventListeners(){this.addEventListener("dragover",this.handleDragOver.bind(this)),this.addEventListener("dragenter",this.handleDragEnter.bind(this)),this.addEventListener("dragleave",this.handleDragLeave.bind(this)),this.addEventListener("drop",this.handleDrop.bind(this))}handleDragOver(n){n.preventDefault(),n.dataTransfer.dropEffect="move"}handleDragEnter(n){n.preventDefault(),"work"===n.dataTransfer.getData("text/source-zone")&&n.dataTransfer.types.includes("application/polygon")&&this.shadowRoot.getElementById("dropZone").classList.add("active")}handleDragLeave(n){this.contains(n.relatedTarget)||this.shadowRoot.getElementById("dropZone").classList.remove("active")}handleDrop(n){n.preventDefault(),this.shadowRoot.getElementById("dropZone").classList.remove("active");try{const t=JSON.parse(n.dataTransfer.getData("application/polygon"));"work"===n.dataTransfer.getData("text/source-zone")&&(this.showPolygon(t.id)||this.addPolygon(t),this.dispatchEvent(new CustomEvent("polygon-moved",{bubbles:!0,detail:{polygon:t,from:"work",to:"buffer"}})))}catch(n){console.error("Ошибка при возврате полигона:",n)}}showPolygon(n){const t=this.shadowRoot.querySelector(`[data-polygon-id="${n}"]`);if(t)return t.style.display="flex",t.style.opacity="1",t.classList.remove("dragging"),this.updateUI(),!0;if(this.polygons.has(n)){const t=this.polygons.get(n);return this.renderPolygon(t),this.updateUI(),!0}return!1}addPolygon(n){this.polygons.has(n.id)||(this.polygons.set(n.id,n),this.renderPolygon(n),this.updateUI())}renderPolygon(n){const t=this.shadowRoot.getElementById("polygonsGrid"),e=document.createElement("div");e.className="polygon-card",e.setAttribute("draggable","true"),e.setAttribute("data-polygon-id",n.id);const o=this.createPolygonSVG(n);e.appendChild(o),e.addEventListener("dragstart",this.handleDragStart.bind(this)),e.addEventListener("dragend",this.handleDragEnd.bind(this)),t.appendChild(e)}createPolygonSVG(n){const t=document.createElement("div");t.className="polygon-svg";const e=n.vertices.map((n=>`${n.x},${n.y}`)).join(" ");return t.innerHTML=`\n            <svg viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">\n                <polygon \n                    points="${e}"\n                    fill="${n.fill}"\n                    stroke="none"\n                    stroke-width="0"\n                />\n            </svg>\n        `,t}handleDragStart(n){const t=n.target.closest(".polygon-card");if(!t)return;const e=t.getAttribute("data-polygon-id"),o=this.polygons.get(e);o&&(n.dataTransfer.setData("application/polygon",JSON.stringify(o)),n.dataTransfer.setData("text/source-zone","buffer"),n.dataTransfer.effectAllowed="move",t.classList.add("dragging"),setTimeout((()=>{t.style.display="none"}),50))}handleDragEnd(n){const t=n.target.closest(".polygon-card");t&&t.classList.remove("dragging")}updateUI(){const n=this.shadowRoot.getElementById("emptyState"),t=this.polygons.size>0;n.style.display=t?"none":"block"}getPolygonCount(){return this.shadowRoot.querySelectorAll('.polygon-card:not([style*="display: none"])').length}getPolygons(){return Array.from(this.polygons.values())}getPolygonData(n){return this.polygons.get(n)}clearPolygons(){this.polygons.clear(),this.shadowRoot.getElementById("polygonsGrid").innerHTML="",this.updateUI()}addPolygons(n){n.forEach((n=>{this.addPolygon(n)}))}}customElements.define("buffer-zone",x);class w extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.polygons=new Map,this.scale=1,this.minScale=.1,this.maxScale=10,this.isPanning=!1,this.panStart={x:0,y:0},this.panOffset={x:0,y:0},this.isDraggingPolygon=!1,this.draggedPolygon=null,this.dragOffset={x:0,y:0},this.selectedPolygon=null,this.init()}init(){this.render(),this.attachEventListeners(),this.resetView()}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    display: block;\n                    background-color: rgb(51, 51, 51);\n                    position: relative;\n                    overflow: hidden;\n                    user-select: none;\n                    width: 100%;\n                    height: 100%;\n                    box-sizing: border-box;\n                }\n\n                .work-header {\n                    background: rgba(255, 255, 255, 0.95);\n                    padding: 16px 20px;\n                    border-bottom: 1px solid #dee2e6;\n                    display: flex;\n                    justify-content: end;\n                    align-items: center;\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    z-index: 200;\n                    backdrop-filter: blur(10px);\n                    height: 62px;\n                    box-sizing: border-box;\n                }\n\n                .work-controls {\n                    display: flex;\n                    gap: 12px;\n                    align-items: center;\n                }\n\n                .zoom-controls {\n                    display: flex;\n                    gap: 6px;\n                    align-items: center;\n                    background: #f8f9fa;\n                    padding: 6px;\n                    border-radius: 8px;\n                    border: 1px solid #dee2e6;\n                }\n\n                .zoom-btn {\n                    width: 32px;\n                    height: 32px;\n                    border: none;\n                    background: white;\n                    border-radius: 6px;\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    font-weight: bold;\n                    transition: all 0.2s;\n                    font-size: 16px;\n                }\n\n                .zoom-btn:hover {\n                    background: #e9ecef;\n                    transform: scale(1.1);\n                }\n\n                .zoom-level {\n                    font-size: 12px;\n                    color: #6c757d;\n                    min-width: 45px;\n                    text-align: center;\n                    font-weight: 500;\n                }\n\n                .work-canvas {\n                    position: absolute;\n                    top: 62px;\n                    left: 50px;\n                    right: 0;\n                    bottom: 30px;\n                    cursor: grab;\n                    overflow: hidden;\n                    background-color: rgb(51, 51, 51);\n                    box-sizing: border-box;\n                }\n\n                .work-canvas.panning {\n                    cursor: grabbing;\n                }\n\n                .main-svg {\n                    width: 100%;\n                    height: 100%;\n                    display: block;\n                }\n\n                .polygon-group {\n                    cursor: move;\n                    transition: filter 0.2s ease;\n                }\n\n                .polygon-group:hover {\n                    filter: brightness(1.2) drop-shadow(0 0 5px rgba(255,255,255,0.3));\n                }\n\n                .polygon-group.selected {\n                    filter: brightness(1.3) drop-shadow(0 0 8px rgba(255,255,255,0.5));\n                }\n\n                .polygon-group.dragging {\n                    opacity: 0.8;\n                    filter: brightness(1.4) drop-shadow(0 0 10px rgba(255,255,255,0.6));\n                    z-index: 1000;\n                }\n\n                .drop-indicator {\n                    position: absolute;\n                    top: 62px;\n                    left: 50px;\n                    right: 20px;\n                    bottom: 30px;\n                    background: rgba(204, 204, 204, 0.1);\n                    border: 3px dashed rgb(204, 204, 204);\n                    border-radius: 12px;\n                    display: none;\n                    align-items: center;\n                    justify-content: center;\n                    font-weight: 600;\n                    color: rgb(204, 204, 204);\n                    font-size: 18px;\n                    z-index: 150;\n                    backdrop-filter: blur(5px);\n                }\n\n                .drop-indicator.active {\n                    display: flex;\n                    animation: pulse 1s infinite;\n                    border-color: white;\n                    color: white;\n                    background: rgba(255, 255, 255, 0.1);\n                }\n\n                @keyframes pulse {\n                    0%, 100% { opacity: 0.7; transform: scale(1); }\n                    50% { opacity: 1; transform: scale(1.02); }\n                }\n\n                .coordinates-display {\n                    position: absolute;\n                    bottom: 50px;\n                    left: 50px;\n                    background: rgba(0, 0, 0, 0.9);\n                    color: white;\n                    padding: 8px 12px;\n                    border-radius: 6px;\n                    font-size: 12px;\n                    font-family: monospace;\n                    z-index: 100;\n                    opacity: 0;\n                    transition: opacity 0.3s;\n                    pointer-events: none;\n                    border: 1px solid rgba(255, 255, 255, 0.2);\n                }\n\n                .coordinates-display.visible {\n                    opacity: 1;\n                }\n\n                .axis-lines {\n                    position: absolute;\n                    pointer-events: none;\n                    z-index: 90;\n                }\n\n                .axis-x {\n                    position: absolute;\n                    left: 50px;\n                    right: 0;\n                    height: 1px;\n                    background: rgba(255, 255, 255, 0.6);\n                    box-shadow: 0 0 3px rgba(255, 255, 255, 0.3);\n                }\n\n                .axis-y {\n                    position: absolute;\n                    top: 62px;\n                    bottom: 30px;\n                    width: 1px;\n                    background: rgba(255, 255, 255, 0.6);\n                    box-shadow: 0 0 3px rgba(255, 255, 255, 0.3);\n                }\n\n                .empty-state {\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    text-align: center;\n                    color: rgb(204, 204, 204);\n                    font-style: italic;\n                    z-index: 50;\n                    pointer-events: none;\n                }\n\n                .empty-icon {\n                    font-size: 48px;\n                    margin-bottom: 16px;\n                    opacity: 0.5;\n                }\n\n                .scale-ruler {\n                    position: absolute;\n                    background: rgba(40, 40, 40, 0.95);\n                    color: white;\n                    font-size: 10px;\n                    font-family: monospace;\n                    z-index: 100;\n                    pointer-events: none;\n                    border: 1px solid rgba(100, 100, 100, 0.5);\n                }\n\n                .scale-ruler.horizontal {\n                    left: 50px;\n                    right: 0;\n                    height: 50px;\n                    bottom: 0;\n                    border-top: 2px solid rgba(150, 150, 150, 0.8);\n                    display: flex;\n                    align-items: center;\n                    position: absolute;\n                    overflow: hidden;\n                    z-index: 9999;\n                }\n\n                .scale-ruler.vertical {\n                    top: 62px;\n                    bottom: 0px;\n                    width: 50px;\n                    height: calc(100% - 62px);\n                    left: 0;\n                    border-right: 2px solid rgba(150, 150, 150, 0.8);\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: flex-end;\n                    position: relative;\n                    overflow: hidden;\n                }\n\n                .ruler-mark {\n                    position: absolute;\n                    color: white;\n                    font-size: 18px;\n                    font-family: monospace;\n                    font-weight: 500;\n                    text-shadow: 1px 1px 2px rgba(0,0,0,0.7);\n                }\n\n                .ruler-mark.horizontal {\n                    bottom: 2px;\n                    transform: translateX(-50%);\n                    white-space: nowrap;\n                }\n\n                .ruler-mark.vertical {\n                    right: 2px;\n                    transform: translateY(50%);\n                    white-space: nowrap;\n                    writing-mode: horizontal-tb;\n                }\n\n                .ruler-tick {\n                    position: absolute;\n                    background: rgba(200, 200, 200, 0.8);\n                }\n\n                .ruler-tick.horizontal {\n                    width: 1px;\n                    height: 8px;\n                    top: 0;\n                }\n\n                .ruler-tick.vertical {\n                    height: 1px;\n                    width: 8px;\n                    right: 0;\n                }\n\n                .ruler-tick.major {\n                    background: rgba(255, 255, 255, 0.9);\n                }\n\n                .ruler-tick.horizontal.major {\n                    height: 12px;\n                    width: 2px;\n                }\n\n                .ruler-tick.vertical.major {\n                    width: 12px;\n                    height: 2px;\n                }\n\n                .remove-btn {\n                    padding: 8px 16px;\n                    border: none;\n                    background: #dc3545;\n                    color: white;\n                    border-radius: 6px;\n                    cursor: pointer;\n                    font-size: 14px;\n                    font-weight: 500;\n                    transition: all 0.2s;\n                    outline: none;\n                    display: flex;\n                    align-items: center;\n                    gap: 6px;\n                }\n\n                .remove-btn:hover {\n                    background: #c82333;\n                    transform: translateY(-1px);\n                }\n\n                .remove-btn:active {\n                    transform: translateY(0);\n                }\n            </style>\n\n            <div class="work-header">\n                <div class="work-controls">\n                    <div class="zoom-controls">\n                        <button class="zoom-btn" id="zoomOut" title="Уменьшить">−</button>\n                        <div class="zoom-level" id="zoomLevel">100%</div>\n                        <button class="zoom-btn" id="zoomIn" title="Увеличить">+</button>\n                        <button class="zoom-btn" id="zoomReset" title="К центру">⌂</button>\n                    </div>\n\n                    <button class="remove-btn" id="removeBtn" title="Вернуть выделенный полигон в буферную зону" style="display: none;">\n                        ↩️ Вернуть\n                    </button>\n                </div>\n            </div>\n\n            <div class="work-canvas" id="workCanvas">\n                <svg class="main-svg" id="mainSvg">\n                    <defs>\n                        <pattern id="smallGrid" width="10" height="10" patternUnits="userSpaceOnUse">\n                            <path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgb(80, 80, 80)" stroke-width="0.5"/>\n                        </pattern>\n                        <pattern id="mediumGrid" width="50" height="50" patternUnits="userSpaceOnUse">\n                            <path d="M 50 0 L 0 0 0 50" fill="none" stroke="rgb(100, 100, 100)" stroke-width="1"/>\n                        </pattern>\n                        <pattern id="largeGrid" width="100" height="100" patternUnits="userSpaceOnUse">\n                            <path d="M 100 0 L 0 0 0 100" fill="none" stroke="rgb(120, 120, 120)" stroke-width="1.5"/>\n                        </pattern>\n                    </defs>\n                    \n                    <rect x="-50000" y="-50000" width="100000" height="100000" fill="url(#smallGrid)" />\n                    <rect x="-50000" y="-50000" width="100000" height="100000" fill="url(#mediumGrid)" />\n                    <rect x="-50000" y="-50000" width="100000" height="100000" fill="url(#largeGrid)" />\n                    \n                    <g id="polygonsGroup"></g>\n                </svg>\n\n                <div class="empty-state" id="emptyState">\n                    <div class="empty-icon">📏</div>\n                    <div>Перетащите полигоны на измерительную доску</div>\n                    <div style="font-size: 12px; margin-top: 8px; opacity: 0.7;">\n                        Бесконечная измерительная сетка<br>\n                        ЛКМ на доске - панорамирование, ЛКМ на полигоне - перемещение<br>\n                        <strong>Выделите полигон и нажмите "Вернуть" для возврата в буферную зону</strong>\n                    </div>\n                </div>\n            </div>\n\n            <div class="drop-indicator" id="dropIndicator">\n                📏 Разместить на доске\n            </div>\n\n            <div class="axis-lines" id="axisLines" style="display: none;">\n                <div class="axis-x" id="axisX"></div>\n                <div class="axis-y" id="axisY"></div>\n            </div>\n\n            <div class="coordinates-display" id="coordinatesDisplay">\n                X: 0, Y: 0\n            </div>\n\n            <div class="scale-ruler horizontal" id="horizontalRuler"></div>\n            <div class="scale-ruler vertical" id="verticalRuler"></div>\n        '}attachEventListeners(){const n=this.shadowRoot.getElementById("workCanvas"),t=this.shadowRoot.getElementById("mainSvg");this.shadowRoot.getElementById("zoomIn").addEventListener("click",(()=>this.zoomIn())),this.shadowRoot.getElementById("zoomOut").addEventListener("click",(()=>this.zoomOut())),this.shadowRoot.getElementById("removeBtn").addEventListener("click",(()=>this.returnSelectedPolygon())),this.shadowRoot.getElementById("zoomReset").addEventListener("click",(()=>this.resetView())),n.addEventListener("wheel",this.handleWheel.bind(this),{passive:!1}),t.addEventListener("mousedown",this.handleMouseDown.bind(this)),t.addEventListener("mousemove",this.handleMouseMove.bind(this)),t.addEventListener("mouseup",this.handleMouseUp.bind(this)),t.addEventListener("mouseleave",this.handleMouseLeave.bind(this)),n.addEventListener("mousemove",this.handleCanvasMouseMove.bind(this)),n.addEventListener("mouseleave",this.handleCanvasMouseLeave.bind(this)),this.addEventListener("dragover",this.handleDragOver.bind(this)),this.addEventListener("dragenter",this.handleDragEnter.bind(this)),this.addEventListener("dragleave",this.handleDragLeave.bind(this)),this.addEventListener("drop",this.handleDrop.bind(this)),t.addEventListener("click",this.handleSvgClick.bind(this))}zoomIn(){this.setZoom(1.3*this.scale)}zoomOut(){this.setZoom(this.scale/1.3)}resetView(){this.scale=1,this.panOffset={x:0,y:0},this.updateViewBox()}setZoom(n){this.scale=Math.max(this.minScale,Math.min(this.maxScale,n)),this.updateViewBox()}updateViewBox(){const n=this.shadowRoot.getElementById("mainSvg"),t=this.shadowRoot.getElementById("workCanvas").getBoundingClientRect(),e=(t.width||600)/this.scale,o=(t.height||400)/this.scale,s=0-this.panOffset.x/this.scale-e/2,i=0-this.panOffset.y/this.scale-o/2;n.setAttribute("viewBox",`${s} ${i} ${e} ${o}`),this.updateZoomDisplay(),this.updateRulers()}updateZoomDisplay(){this.shadowRoot.getElementById("zoomLevel").textContent=`${Math.round(100*this.scale)}%`}handleWheel(n){n.preventDefault();const t=n.deltaY>0?.9:1.1;this.setZoom(this.scale*t)}handleMouseDown(n){const t=n.target.closest(".polygon-group");if(t&&0===n.button){this.isDraggingPolygon=!0,this.draggedPolygon=t;const e=t.getAttribute("data-polygon-id"),o=this.polygons.get(e),s=this.getSvgPoint(n);this.dragOffset={x:s.x-o.workPosition.x,y:s.y-o.workPosition.y},t.classList.add("dragging"),this.selectPolygon(e),n.stopPropagation()}else 0===n.button&&(this.isPanning=!0,this.panStart={x:n.clientX-this.panOffset.x,y:n.clientY-this.panOffset.y},this.shadowRoot.getElementById("workCanvas").classList.add("panning"))}handleMouseMove(n){if(this.isDraggingPolygon&&this.draggedPolygon){const t=this.getSvgPoint(n),e=t.x-this.dragOffset.x,o=t.y-this.dragOffset.y,s=this.draggedPolygon.getAttribute("data-polygon-id"),i=this.polygons.get(s);i.workPosition={x:e,y:o},this.draggedPolygon.setAttribute("transform",`translate(${e}, ${o}) scale(${i.workScale||1})`),n.preventDefault()}else this.isPanning&&(this.panOffset.x=n.clientX-this.panStart.x,this.panOffset.y=n.clientY-this.panStart.y,this.updateViewBox())}handleMouseUp(n){this.isDraggingPolygon&&this.draggedPolygon&&(this.draggedPolygon.classList.remove("dragging"),this.isDraggingPolygon=!1,this.draggedPolygon=null,this.dragOffset={x:0,y:0}),this.isPanning&&(this.isPanning=!1,this.shadowRoot.getElementById("workCanvas").classList.remove("panning"))}handleMouseLeave(n){this.handleMouseUp(n)}getSvgPoint(n){const t=this.shadowRoot.getElementById("mainSvg"),e=t.getBoundingClientRect(),o=t.viewBox.baseVal;return{x:(n.clientX-e.left)/e.width*o.width+o.x,y:(n.clientY-e.top)/e.height*o.height+o.y}}handleCanvasMouseMove(n){if(!this.isDraggingPolygon&&!this.isPanning){const t=this.getSvgPoint(n),e=this.shadowRoot.getElementById("coordinatesDisplay"),o=this.shadowRoot.getElementById("axisLines"),s=this.shadowRoot.getElementById("axisX"),i=this.shadowRoot.getElementById("axisY");e.textContent=`X: ${Math.round(t.x)}, Y: ${Math.round(-t.y)}`,e.classList.add("visible");const a=this.shadowRoot.getElementById("workCanvas").getBoundingClientRect(),r=n.clientX-a.left,d=n.clientY-a.top;s.style.top=`${d+62}px`,i.style.left=`${r+50}px`,o.style.display="block"}}handleCanvasMouseLeave(){const n=this.shadowRoot.getElementById("coordinatesDisplay"),t=this.shadowRoot.getElementById("axisLines");n.classList.remove("visible"),t.style.display="none"}updateRulers(){const n=this.shadowRoot.getElementById("mainSvg").viewBox.baseVal,t=this.shadowRoot.getElementById("workCanvas").getBoundingClientRect();this.updateHorizontalRuler(n,t),this.updateVerticalRuler(n,t)}updateHorizontalRuler(n,t){const e=this.shadowRoot.getElementById("horizontalRuler");e.innerHTML="";const o=this.scale>2?10:this.scale>.5?50:100,s=Math.floor(n.x/o)*o,i=n.x+n.width;for(let a=s;a<=i;a+=o){const s=(a-n.x)/n.width*t.width;if(s>=0&&s<=t.width){const n=a%(5*o)==0,t=document.createElement("div");if(t.className="ruler-tick horizontal "+(n?"major":""),t.style.left=`${s}px`,e.appendChild(t),n){const n=document.createElement("div");n.className="ruler-mark horizontal",n.style.left=`${s}px`,n.textContent=a.toString(),e.appendChild(n)}}}}updateVerticalRuler(n,t){const e=this.shadowRoot.getElementById("verticalRuler");e.innerHTML="";const o=this.scale>2?10:this.scale>.5?50:100,s=Math.floor(n.y/o)*o,i=n.y+n.height;for(let a=s;a<=i;a+=o){const s=(a-n.y)/n.height*t.height;if(s>=0&&s<=t.height){const n=a%(5*o)==0,i=document.createElement("div");if(i.className="ruler-tick vertical "+(n?"major":""),i.style.bottom=t.height-s+"px",e.appendChild(i),n){const n=document.createElement("div");n.className="ruler-mark vertical",n.style.bottom=t.height-s+"px",n.textContent=(-a).toString(),e.appendChild(n)}}}}handleDragOver(n){n.preventDefault(),n.dataTransfer.dropEffect="move"}handleDragEnter(n){n.preventDefault(),n.dataTransfer.types.includes("application/polygon")&&this.shadowRoot.getElementById("dropIndicator").classList.add("active")}handleDragLeave(n){this.contains(n.relatedTarget)||this.shadowRoot.getElementById("dropIndicator").classList.remove("active")}handleDrop(n){n.preventDefault(),this.shadowRoot.getElementById("dropIndicator").classList.remove("active");try{const t=JSON.parse(n.dataTransfer.getData("application/polygon")),e=n.dataTransfer.getData("text/source-zone");if("work"!==e){const o=this.getSvgPoint(n);let s=this.shadowRoot.querySelector(`[data-polygon-id="${t.id}"]`);if(s){s.style.display="block";const n=this.polygons.get(t.id);n&&(n.workPosition={x:o.x,y:o.y},s.setAttribute("transform",`translate(${o.x}, ${o.y}) scale(${n.workScale||1})`))}else this.addPolygonAtPosition(t,o.x,o.y);this.dispatchEvent(new CustomEvent("polygon-moved",{bubbles:!0,detail:{polygon:t,from:e,to:"work"}}))}}catch(n){console.error("Ошибка при обработке drop:",n)}}addPolygonAtPosition(n,t,e){if(this.polygons.has(n.id))return;const o={...n,workPosition:{x:t,y:e},workScale:1};this.polygons.set(n.id,o),this.renderPolygon(o),this.updateUI()}renderPolygon(n){const t=this.shadowRoot.getElementById("polygonsGroup"),e=document.createElementNS("http://www.w3.org/2000/svg","g");e.classList.add("polygon-group"),e.setAttribute("data-polygon-id",n.id);const{x:o,y:s}=n.workPosition,i=n.workScale||1;e.setAttribute("transform",`translate(${o}, ${s}) scale(${i})`);const a=document.createElementNS("http://www.w3.org/2000/svg","polygon");let r;if(n.points)r=n.points;else{if(!n.vertices)return;r=n.vertices.map((n=>`${n.x-50},${n.y-50}`)).join(" ")}if(a.setAttribute("points",r),a.setAttribute("fill",n.color||n.fill||"#ff6b6b"),a.setAttribute("stroke","rgba(255, 255, 255, 0.3)"),a.setAttribute("stroke-width","1"),n.name){const t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("x","0"),t.setAttribute("y","-5"),t.setAttribute("fill","white"),t.setAttribute("font-size","12"),t.setAttribute("font-weight","bold"),t.setAttribute("text-anchor","middle"),t.setAttribute("text-shadow","1px 1px 2px rgba(0,0,0,0.7)"),t.textContent=n.name,e.appendChild(t)}e.appendChild(a),t.appendChild(e),e.addEventListener("click",(t=>{this.selectPolygon(n.id),t.stopPropagation()})),e.style.opacity="0",requestAnimationFrame((()=>{e.style.transition="opacity 0.3s ease",e.style.opacity="1"}))}handleSvgClick(n){let t=n.target.closest(".polygon-group");if(!t&&n.target.hasAttribute&&n.target.hasAttribute("data-polygon-id")&&(t=n.target),!t){let e=n.target;for(;e&&e!==this.shadowRoot;){if(e.hasAttribute&&e.hasAttribute("data-polygon-id")){t=e;break}e=e.parentElement}}if(t){const e=t.getAttribute("data-polygon-id");this.selectPolygon(e),n.stopPropagation()}else this.selectPolygon(null)}selectPolygon(n){if(this.selectedPolygon){const n=this.shadowRoot.querySelector(`[data-polygon-id="${this.selectedPolygon}"]`);n&&n.classList.remove("selected")}if(this.selectedPolygon=n,n){const t=this.shadowRoot.querySelector(`[data-polygon-id="${n}"]`);t&&t.classList.add("selected")}this.shadowRoot.getElementById("removeBtn").style.display=n?"flex":"none"}returnSelectedPolygon(){if(!this.selectedPolygon)return;const n=this.selectedPolygon,t=this.polygons.get(n);if(!t)return;const e=this.shadowRoot.querySelector(`[data-polygon-id="${n}"]`);e&&e.remove(),this.polygons.delete(n),this.selectedPolygon=null,this.shadowRoot.getElementById("removeBtn").style.display="none",this.updateUI();let o=this.parentElement;for(;o&&"POLYGON-APP"!==o.tagName;)o=o.parentElement||o.host;o?o.handlePolygonReturn(t):this.dispatchEvent(new CustomEvent("polygon-moved",{bubbles:!0,composed:!0,detail:{polygon:t,from:"work",to:"buffer"}}))}updateUI(){const n=this.polygons.size;this.shadowRoot.getElementById("emptyState").style.display=0===n?"block":"none"}getPolygonCount(){return this.polygons.size}getPolygons(){return Array.from(this.polygons.values())}getPolygonData(n){return this.polygons.get(n)}clearPolygons(){this.polygons.clear(),this.shadowRoot.getElementById("polygonsGroup").innerHTML="",this.selectedPolygon=null,this.updateUI()}connectedCallback(){new ResizeObserver((()=>{this.updateViewBox()})).observe(this),setTimeout((()=>{this.updateViewBox()}),100)}}customElements.define("work-zone",w),document.addEventListener("DOMContentLoaded",(()=>{console.log("Polygon App загружено!")}))})();